<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="passWord" jdbcType="VARCHAR" property="passWord" />
        <result column="realName" jdbcType="VARCHAR" property="realName" />
    </resultMap>

    <select id="getUser" resultType="com.example.demo.entity.User">
        select * from user where id = #{id}
    </select>

    <insert id="addUser" parameterType="com.example.demo.entity.User">
        insert into user
        values
        (null, #{studentId}, #{userName}, #{sex}, #{role}, #{mobile}, #{grade}, #{major}, #{gradeClass}, md5(#{password}), #{question}, md5(#{answer}))
    </insert>

    <select id="getAllUser" resultType="com.example.demo.entity.User">
        select * from user
    </select>

    <update id="updatePassword" parameterType="com.example.demo.entity.User">
        update user set password = md5(#{password}) where studentId = #{studentId}
    </update>

    <update id="updateQuestion" parameterType="com.example.demo.entity.User">
        update user set question = #{question}, answer = md5(#{answer}) where studentId = #studentId
    </update>

    <select id="getUserByMobile" resultType="Integer">
        select studentId from user where mobile = #{mobile} limit 1
    </select>

    <update id="updateUserById" parameterType="user">
        update user
        <trim prefix="set" prefixOverrides=",">
            <if test="userName != null and userName != ''">
                ,userName = #{userName}
            </if>
            <if test="password != null and password != ''">
                ,password = #{password}
            </if>
            <if test="realName != null and realName !=''">
                ,realName = #{realName}
            </if>
        </trim>
        where id = #{id}
    </update>



    <!--<insert id="insert" parameterType="com.example.entity.User">
        insert into User (userId, userName, phone,
        sex)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.example.entity.User">
        insert into User
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userId,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="findAllUser" resultType="com.example.entity.User">
        select * from User
    </select>-->
</mapper>
